Q 1. Provide the list of markets in which customer "Atliq Exclusive" operates its business in the APAC region. 


SELECT
    DISTINCT market
FROM
    dim_customer
WHERE
    customer = "Atliq Exclusive"
    AND region = "APAC";




Q 2. What is the percentage of unique product increase in 2021 vs 2020? The final
output contains these fields – unique_products_2020, unique_products_2021,
percentage_chg.



WITH product_20 AS (
    SELECT 
        COUNT(DISTINCT product_code) AS unique_products_2020
    FROM 
        fact_sales_monthly
    WHERE 
        fiscal_year = 2020
),
product_21 AS (
    SELECT 
        COUNT(DISTINCT product_code) AS unique_products_2021
    FROM 
        fact_sales_monthly
    WHERE 
        fiscal_year = 2021
)
SELECT
    unique_products_2020,
    unique_products_2021,
    ROUND(
        ((unique_products_2021 - unique_products_2020) / unique_products_2020) * 100,
        2
    ) AS percentage_chg
FROM 
    product_20, product_21;




Q 3. Provide a report with all the unique product counts for each segment and sort them
in descending order of product counts. The final output contains 2 fields - segment
product_count.



SELECT
    segment,
    COUNT(DISTINCT product_code) AS product_count
FROM
    dim_product
GROUP BY
    segment
ORDER BY
    product_count DESC;



Q 4. Follow-up: Which segment had the most increase in unique products in 2021 vs
2020? The final output contains these fields - segment , product_count_2020 ,
product_count_2021, difference.



WITH product_20 AS (
    SELECT
        p.segment,
        COUNT(DISTINCT s.product_code) AS product_count_2020
    FROM
        fact_sales_monthly s
        JOIN dim_product p ON s.product_code = p.product_code
    WHERE
        s.fiscal_year = 2020
    GROUP BY
        p.segment
),
product_21 AS (
    SELECT
        p.segment,
        COUNT(DISTINCT s.product_code) AS product_count_2021
    FROM
        fact_sales_monthly s
        JOIN dim_product p ON s.product_code = p.product_code
    WHERE
        s.fiscal_year = 2021
    GROUP BY
        p.segment
)
SELECT
    p20.segment,
    product_count_2020,
    product_count_2021,
    product_count_2021 - product_count_2020 AS difference
FROM
    product_20 p20
    JOIN product_21 p21 ON p20.segment = p21.segment
ORDER BY
    difference DESC;




Q 5. Get the products that have the highest and lowest manufacturing costs. The final
output should contain these fields - product_code, product, manufacturing_cost.



SELECT
    f.product_code,
    p.product,
    f.manufacturing_cost AS manufacturing_cost
FROM
    fact_manufacturing_cost f
    JOIN dim_product p ON f.product_code = p.product_code
WHERE
    f.manufacturing_cost = (
        SELECT
            MIN(manufacturing_cost)
        FROM
            fact_manufacturing_cost
    )

UNION ALL

SELECT
    f.product_code,
    p.product,
    f.manufacturing_cost AS manufacturing_cost
FROM
    fact_manufacturing_cost f
    JOIN dim_product p ON f.product_code = p.product_code
WHERE
    f.manufacturing_cost IN (
        SELECT
            MAX(manufacturing_cost)
        FROM
            fact_manufacturing_cost
    );





Q 6. Generate a report which contains the top 5 customers who received an average high
pre_invoice_discount_pct for the fiscal year 2021 and in the Indian market. The final output
contains these fields - customer_code, customer, average_discount_percentage.



SELECT
    pre.customer_code,
    c.customer,
    ROUND(AVG(pre.pre_invoice_discount_pct) * 100, 2) AS average_discount_percentage
FROM
    fact_pre_invoice_deductions pre
    JOIN dim_customer c ON pre.customer_code = c.customer_code
WHERE
    pre.fiscal_year = 2021
    AND c.market = 'India'
GROUP BY
    pre.customer_code,
    c.customer
ORDER BY
    average_discount_percentage DESC
LIMIT 5;




Q 7. Get the complete report of the Gross sales amount for the customer “Atliq Exclusive”
for each month. This analysis helps to get an idea of low and high-performing months and
take strategic decisions. The final report contains these columns: Month, Year, Gross sales
Amount.

SELECT
    MONTHNAME(f.date) AS Month,
    f.fiscal_year,
    ROUND(
        SUM(g.gross_price * f.sold_quantity) / 1000000, 2
    ) AS Gross_sales_Amount
FROM
    fact_gross_price g
    JOIN fact_sales_monthly f ON g.product_code = f.product_code
        AND g.fiscal_year = f.fiscal_year
    JOIN dim_customer c ON f.customer_code = c.customer_code
WHERE
    customer = "Atliq Exclusive"
GROUP BY
    Month,
    f.date,
    f.fiscal_year
ORDER BY
    f.date;




Q 8. In which quarter of 2020, got the maximum total_sold_quantity ? The final output
contains these fields sorted by the total_sold_quantity, Quarter.



SELECT
    CASE
        WHEN MONTH(date) BETWEEN 9 AND 11 THEN "01"
        WHEN MONTH(date) IN (12, 1, 2) THEN "02"
        WHEN MONTH(date) BETWEEN 3 AND 5 THEN "03"
        WHEN MONTH(date) BETWEEN 6 AND 8 THEN "04"
    END AS Quarter,
    SUM(sold_quantity) AS total_sold_quantity
FROM
    fact_sales_monthly
WHERE
    fiscal_year = 2020
GROUP BY
    Quarter
ORDER BY
    total_sold_quantity DESC;



Q 9. Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage
of contribution? The final output contains these fields-channel, gross_sales_mln, percentage.



WITH channel_gross_sales AS (
    SELECT
        c.channel,
        SUM(g.gross_price * f.sold_quantity)/1000000 AS gross_sales_mln
    FROM
        fact_sales_monthly f
        JOIN fact_gross_price g ON f.product_code = g.product_code
            AND f.fiscal_year = g.fiscal_year
        JOIN dim_customer c ON f.customer_code = c.customer_code
    WHERE
        f.fiscal_year = 2021
    GROUP BY
        c.channel
)
SELECT
    *,
    ROUND(
        gross_sales_mln * 100 / SUM(gross_sales_mln) OVER(), 2
    ) AS percentage
FROM
    channel_gross_sales;





Q 10. Get the Top 3 products in each division that have a high total_sold_quantity in the
fiscal_year 2021?




WITH product_by_sold_quantity AS (
    SELECT
        f.product_code,
        SUM(f.sold_quantity) AS total_sold_quantity
    FROM
        fact_sales_monthly f
    WHERE
        fiscal_year = 2021
    GROUP BY
        f.product_code
),
ranks AS (
    SELECT
        p.division,
        q.product_code,
        p.product,
        q.total_sold_quantity,
        DENSE_RANK() OVER (
            PARTITION BY p.division
            ORDER BY q.total_sold_quantity DESC
        ) AS rank_order
    FROM
        product_by_sold_quantity q
        JOIN dim_product p ON q.product_code = p.product_code
)
SELECT
    *
FROM
    ranks
WHERE
    rank_order <= 3;
